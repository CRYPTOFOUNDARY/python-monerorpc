AuthServiceProxy is an improved version of python-jsonrpc for Monero (daemon, rpc).
`python-monerorpc` was originally forked from python-bitcoinrpc.

AuthServiceProxy can be used with
- `monerod` (daemon rpc)
- `monero-wallet-rpc`

It includes the following generic improvements:

- HTTP connections persist for the life of the AuthServiceProxy object
- sends protocol 'jsonrpc', per JSON-RPC 2.0
- sends proper, incrementing 'id'
- uses standard Python json lib
- can optionally log all RPC calls and results
- JSON-2.0 batch support

It also includes the following monero-specific details:

- sends Digest HTTP authentication headers
- parses all JSON numbers that look like floats as Decimal,
  and serializes Decimal values to JSON-RPC connections.

Installation:

- change the first line of setup.py to point to the directory of your installation of python 2.*
- run setup.py

Note: This will only install monerorpc. If you also want to install jsonrpc to preserve
backwards compatibility, you have to replace 'monerorpc' with 'jsonrpc' in setup.py and run it again.

Example usage `monerod`:

    from monerorpc.authproxy import AuthServiceProxy, JSONRPCException

    # rpc_user and rpc_password are set as flags in the cli command
    rpc_connection = AuthServiceProxy('http://{0}:{1}@127.0.0.1:18081'.format(rpc_user, rpc_password))
    info = rpc_connection.get_info()
    print(info)

    # rpc_user and rpc_password can also be left out (testing, develop, not recommended)
    rpc_connection = AuthServiceProxy('http://127.0.0.1:18081')

Example usage `monero-wallet-rpc`:

    from monerorpc.authproxy import AuthServiceProxy, JSONRPCException

    # rpc_user and rpc_password are set as flags in the cli command
    rpc_connection = AuthServiceProxy('http://{0}:{1}@127.0.0.1:18083'.format(rpc_user, rpc_password))
    balance = rpc_connection.get_balance()
    print(balance)

Logging all RPC calls to stderr:

    from monerorpc.authproxy import AuthServiceProxy, JSONRPCException
    import logging

    logging.basicConfig()
    logging.getLogger("MoneroRPC").setLevel(logging.DEBUG)

    rpc_connection = AuthServiceProxy('http://{0}:{1}@127.0.0.1:18081'.format(rpc_user, rpc_password))
    print(rpc_connection.get_info())

Produces output on stderr like:

    DEBUG:MoneroRPC:-1-> get_info []

    DEBUG:MoneroRPC:<-1- {u'result': {u'incoming_connections_count': 0, ...etc }
